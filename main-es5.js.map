{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///(webpack)/buildin/global.js","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/configs/app-config.ts","webpack:///src/app/core/http/jwt/jwt.service.ts","webpack:///src/app/core/interceptors/auth-token/auth-token.interceptor.ts","webpack:///src/app/core/routes/preloading-strategy.service.ts","webpack:///src/app/core/translate/translate.loader.ts","webpack:///src/app/services/encryption/encryption.service.ts","webpack:///src/app/services/exceptions/error-global.ts","webpack:///src/app/services/exceptions/error-options.ts","webpack:///src/app/services/exceptions/error.service.ts","webpack:///src/app/services/exceptions/global-error-handler.service.ts","webpack:///src/app/services/exceptions/logging.service.ts","webpack:///src/app/services/http/generate-qr/generate-qr.service.ts","webpack:///src/app/services/idle-timeout/idle-timeout.service.ts","webpack:///src/app/services/local-storage/local-storage.service.ts","webpack:///src/app/services/services.index.ts","webpack:///src/app/services/services.module.ts","webpack:///src/app/services/session-storage/session-storage.service.ts","webpack:///src/app/services/validate-data/validate-data.service.ts","webpack:///src/app/shared/shared.index.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/theme/footer/footer.component.ts","webpack:///src/app/shared/theme/footer/footer.component.html","webpack:///src/app/shared/theme/header/header.component.ts","webpack:///src/app/shared/theme/header/header.component.html","webpack:///src/app/shared/theme/not-authorized/not-authorized.component.ts","webpack:///src/app/shared/theme/not-authorized/not-authorized.component.html","webpack:///src/app/shared/theme/page-not-found/page-not-found.component.ts","webpack:///src/app/shared/theme/page-not-found/page-not-found.component.html","webpack:///src/app/shared/theme/service-error/service-error.component.ts","webpack:///src/app/shared/theme/service-error/service-error.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///util (ignored)","webpack:///util (ignored)?701b","webpack:///buffer (ignored)","webpack:///crypto (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","g","Function","window","appRoutes","path","loadChildren","m","PagesModule","data","preload","AuthModule","component","AppRoutingModule","forRoot","useHash","enableTracing","preloadingStrategy","imports","AppComponent","_idle","http","_keepalive","errorTypes","_logger","errorStages","errorMessages","translate","_generateQrService","_idleTimeoutService","_validateDataService","timedOut","langs","lastPing","idleState","idleTimeout","validateId","console","log","getMessageError","validateIdType","browserlang","getBrowserLang","indexOf","setDefaultLang","getQRCode","subscribe","resp","lang","stateSession","setIdle","setTimeout","setInterrupts","onIdleEnd","reset","onTimeout","onIdleStart","onTimeoutWarning","countdown","interval","onPing","Date","watch","ERROR","QR","F143","get","selector","templateUrl","styleUrls","providers","AppModule","provide","useClass","defaultLanguage","loader","useFactory","deps","level","DEBUG","serverLogLevel","timeOut","declarations","bootstrap","appConfig","token_name_jwt","JwtService","_sessionStorageService","username","password","urlAccessToken","requestUrl","headers","btoa","post","getItemString","token","setItem","removeItem","providedIn","AuthTokenInterceptor","_jwtService","next","handle","getAccessToken","accessToken","reqClone","clone","error","AuthTokenProvider","multi","PreloadingStrategyService","route","load","HttpClientTrans","handler","HttpLoaderFactory","EncryptionService","_masterEncrypt","_masterDecrypt","value","JSON","parse","encrypt","stringify","encryptInfo","reject","decrypt","ErrorGlobal","type","stage","message","httpStatus","handled","name","Object","setPrototypeOf","prototype","ErrorTypes","INFO","WARNING","FATAL_ERROR","ErrorStages","PUSH","ErrorMessages","F141","F142","F144","F145","F146","F147","F148","F149","F150","T141","T142","T143","T144","T145","T146","T147","T148","T149","T150","ErrorService","toString","stack","navigator","onLine","GlobalErrorHandlerService","injector","errorService","logger","stackTrace","getServerErrorMessage","logError","getClientErrorMessage","getClientErrorStack","LoggingService","toastr","fatal","warn","debug","info","showError","warning","GenerateQrService","urlExample","IdleTimeoutService","validateSession","asObservable","logout","LocalStorageService","key","localStorage","getItem","item","clear","ServicesModule","SessionStorageService","sessionStorage","ValidateDataService","REGEX_NUMBERS","documentId","result","regex","RegExp","matcher","test","setMessageError","length","documentType","pathMsg","initPath","messageError","instant","SharedModule","FooterComponent","HeaderComponent","NotAuthorizedComponent","PageNotFoundComponent","ServiceErrorComponent","environment","production","endpoints","apiKey","time","timeSession","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './shared/shared.index';\nimport { PreloadingStrategyService } from './core/routes/preloading-strategy.service';\n\nconst appRoutes: Routes = [\n  /*{\n    path: '',\n    redirectTo: '',\n    pathMatch: 'full',\n  },*/\n  {\n    path: '',\n    loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule),\n    data: { preload: false }\n  },\n  {\n    path: 'auth',\n    loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule),\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes, {\n    useHash: true,\n    enableTracing: false,\n    preloadingStrategy: PreloadingStrategyService\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Keepalive } from '@ng-idle/keepalive';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Component, ErrorHandler } from '@angular/core';\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\nimport { ErrorGlobal } from './services/exceptions/error-global';\nimport { LoggingService } from './services/exceptions/logging.service';\nimport { environment as ENV } from '../../src/environments/environment';\nimport { IdleTimeoutService, ValidateDataService, GenerateQrService } from './services/services.index';\nimport { ErrorMessages, ErrorStages, ErrorTypes } from './services/exceptions/error-options';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: [ErrorMessages, ErrorTypes, ErrorStages]\n})\nexport class AppComponent {\n\n  timedOut = false;\n  langs = ['es', 'en'];\n  lastPing?: Date = null;\n  idleState = 'Not started.';\n\n  constructor(\n    public _idle: Idle, \n    private http: HttpClient, \n    public _keepalive: Keepalive, \n    public errorTypes: ErrorTypes,\n    public _logger: LoggingService,\n    public errorStages: ErrorStages, \n    public errorMessages: ErrorMessages, \n    private translate: TranslateService, \n    public _generateQrService: GenerateQrService, \n    public _idleTimeoutService: IdleTimeoutService, \n    public _validateDataService: ValidateDataService) {\n\n    this.idleTimeout();\n\n    if(!_validateDataService.validateId(\"1020806419\")){\n      console.log(_validateDataService.getMessageError());\n    }\n\n    if(!_validateDataService.validateIdType(\"CC\")){\n      console.log(_validateDataService.getMessageError());\n    }\n  }\n\n  ngOnInit(): void {\n\n    let browserlang = this.translate.getBrowserLang();\n    if (this.langs.indexOf(browserlang) > -1) {\n      this.translate.setDefaultLang(browserlang);\n    } else {\n      this.translate.setDefaultLang('es');\n    }\n\n    this._generateQrService.getQRCode().subscribe(resp => {\n      console.log(resp);\n    });\n  }\n\n  useLanguage(lang: string): void {\n    this.translate.setDefaultLang(lang);\n  }\n\n  idleTimeout() {\n    this._idleTimeoutService.stateSession.subscribe(stateSession => {\n      if(stateSession){\n        this._idle.setIdle(1);\n        this._idle.setTimeout(ENV['time']['timeSession']);\n        this._idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n\n        this._idle.onIdleEnd.subscribe(() => {\n          this.idleState = 'No longer idle.'\n          console.log(this.idleState);\n          this.reset();\n        });\n\n        this._idle.onTimeout.subscribe(() => {\n          this.idleState = 'Timed out!';\n          this.timedOut = true;\n          console.log(this.idleState);\n          //this.router.navigate(['/']);\n        });\n\n        this._idle.onIdleStart.subscribe(() => {\n          this.idleState = 'You\\'ve gone idle!'\n          console.log(this.idleState);\n          //this.childModal.show();\n        });\n\n        this._idle.onTimeoutWarning.subscribe((countdown) => {\n          this.idleState = 'You will time out in ' + countdown + ' seconds!'\n          console.log(this.idleState);\n        });\n\n        this._keepalive.interval(15);\n        this._keepalive.onPing.subscribe(() => this.lastPing = new Date());\n        this.reset();\n      }\n    });\n  }\n\n  reset() {\n\t\tthis._idle.watch();\n\t\tthis.idleState = 'Started.';\n\t\tthis.timedOut = false;\n  }\n\n  throwError() {\n    throw new ErrorGlobal(this.errorTypes.ERROR, this.errorStages.QR, this.errorMessages.F143);\n  }\n\n  throwHttpError() {\n    this.http.get('urlhere').subscribe();\n  }\n}\n","<router-outlet></router-outlet>\n\n<!--<button (click)=\"throwError()\">Error</button>\n<button (click)=\"throwHttpError()\">HTTP</button>-->\n","import { NgModule, ErrorHandler } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgIdleKeepaliveModule } from '@ng-idle/keepalive';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\n\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ServicesModule } from './services/services.module';\n\nimport { PreloadingStrategyService } from './core/routes/preloading-strategy.service';\nimport { AuthTokenProvider } from './core/interceptors/auth-token/auth-token.interceptor';\n\nimport { LoggerModule, NgxLoggerLevel } from 'ngx-logger';\nimport { GlobalErrorHandlerService } from './services/exceptions/global-error-handler.service';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { HttpClientTrans, HttpLoaderFactory } from './core/translate/translate.loader';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    SharedModule,\n    BrowserModule,\n    ServicesModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgIdleKeepaliveModule.forRoot(),\n    TranslateModule.forRoot({\n      defaultLanguage: 'es',\n      loader: {\n          provide: TranslateLoader,\n          useFactory: (HttpLoaderFactory),\n          deps: [HttpClientTrans]\n      }\n    }),\n    LoggerModule.forRoot({\n      // serverLoggingUrl: 'api/logs',\n      level: NgxLoggerLevel.DEBUG,\n      serverLogLevel: NgxLoggerLevel.ERROR\n    }),\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({\n      timeOut: 6000})\n  ],\n  providers: [\n    AuthTokenProvider,\n    PreloadingStrategyService,\n    { provide: ErrorHandler, \n      useClass: GlobalErrorHandlerService \n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export const appConfig = {\n    token_name_jwt: 'jw_token'\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { appConfig } from '../../../configs/app-config';\nimport { SessionStorageService } from '../../../services/services.index';\nimport { environment as ENV } from '../../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtService {\n\n  constructor(private _sessionStorageService: SessionStorageService, private http: HttpClient) { }\n\n  /**\n   * This function get the json web token - JWT\n   */\n  getAccessToken() {\n    let username = ENV['keys']['username'];\n    let password = ENV['keys']['password'];\n    let urlAccessToken = ENV['endpoints']['accessToken'];\n    let requestUrl = urlAccessToken + '?grant_type=client_credentials';\n\n    const headers = {\n      \"Skip\": \"true\",\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"Authorization\": 'Basic ' + btoa(username + ':' + password)\n    }\n\n    return this.http.post(requestUrl, null, { headers });\n  }\n\n  /**\n   * This function return the json web token - JWT\n   * @returns String - token stored in the localstorage\n   */\n  getJwtSessionStorage():string {\n    return this._sessionStorageService.getItemString(appConfig.token_name_jwt);\n  }\n\n  /**\n   * This function will store the json web token - JWT\n   * @param token - token JWT\n   * @returns Void - returns nothing\n   */\n  setJwtSessionStorage(token: string):void {\n    this._sessionStorageService.setItem(appConfig.token_name_jwt, token);\n  }\n\n  /**\n   * This function will remove the json web token - JWT\n   * @returns Void - returns nothing\n   */\n  removeJwtSessionStorage():void {\n    this._sessionStorageService.removeItem(appConfig.token_name_jwt);\n  }\n}","import { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { JwtService } from '../../http/jwt/jwt.service';\n\nimport { \n  HttpEvent,\n  HttpRequest,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpErrorResponse,\n  HTTP_INTERCEPTORS\n} from '@angular/common/http';\n\n@Injectable()\nexport class AuthTokenInterceptor implements HttpInterceptor {\n\n  constructor(private _jwtService: JwtService) {\n    \n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    if (req.headers.get(\"Skip\")){\n      return next.handle(req);\n    }\n\n    this._jwtService.getAccessToken().subscribe(data => {\n      let accessToken = data['access_token'];\n  \n      const headers = new HttpHeaders({\n        'access-token': accessToken\n      });\n  \n      const reqClone = req.clone({ headers });\n  \n      //return next.handle(reqClone).pipe(catchError(this.manageError));\n      return next.handle(req);\n    });\n  }\n\n  manageError(error: HttpErrorResponse) {\n    return throwError(error);\n  }\n}\n\nexport const AuthTokenProvider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthTokenInterceptor,\n  multi: true\n};","import { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Route } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreloadingStrategyService implements PreloadingStrategy {\n\n  constructor() { }\n\n  preload(route: Route, load: () => Observable<any>): Observable<any> {\n    if (route.data && route.data['preload']) {\n      return load();\n    } else {\n      return of(null);\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS, HttpBackend } from '@angular/common/http';\n\n@Injectable({providedIn: 'root'})\nexport class HttpClientTrans extends HttpClient {\n  constructor(handler: HttpBackend) {\n    super(handler);\n  }\n}\n\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}","import ecc from 'eccjs';\nimport { Injectable } from '@angular/core';\nimport { environment as ENV} from '../../../environments/environment';\n\n@Injectable()\nexport class EncryptionService {\n\n  _masterEncrypt = ENV['keys']['backend_keys']['masterEncrypt'];\n  _masterDecrypt = ENV['keys']['backend_keys']['masterDecrypt'];\n\n  constructor() { }\n\n  /**\n   * This function encrypts the data\n   * @param value - String or array\n   * @returns Json - Data encrypted in the eccjs algorithm \n   */\n  getValueEncrypt(value: any):object {\n    return JSON.parse(ecc.encrypt(this._masterEncrypt, JSON.stringify(value)));\n  }\n\n  /**\n   * This function encrypts the data\n   * @param value - String or array\n   * @returns String - Data encrypted in the eccjs algorithm \n   */\n  getValueEncryptString(value: any):string {\n    return ecc.encrypt(this._masterEncrypt, JSON.stringify(value));\n  }\n\n  /**\n   * This function decrypts the data\n   * @param encryptInfo - Encrypted data string with the server's public key\n   * @returns String - Data decrypted in the eccjs algorithm \n   */\n  decryptData(encryptInfo: any):any {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(ecc.decrypt(this._masterDecrypt, JSON.stringify(encryptInfo)));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n}","export class ErrorGlobal extends Error {\n    name: string;\n    message: string;\n    type: string;\n    stage: string;\n    httpStatus?: number = 404;\n    applicationStatus?: number;\n    errorMessageTranslationkey: string;\n    handled: boolean = false;\n\n    constructor(type?: string, stage?: string, message?: string) {\n      super(message);\n      this.name = ErrorGlobal.name;\n      this.type = type;\n      this.stage = stage;\n      Object.setPrototypeOf(this, ErrorGlobal.prototype);\n    }\n}\n","export class ErrorTypes {\n  // INFO, DEBUG, WARNING, ERROR, FATAL_ERROR.\n  INFO = 'INFO';\n  DEBUG = 'DEBUG';\n  WARNING = 'WARNING';\n  ERROR = 'ERROR';\n  FATAL_ERROR = 'FATAL_ERROR';\n\n  constructor() {}\n}\n\nexport class ErrorStages {\n  QR = 'GENERACIÓN CODIGO QR';\n  PUSH = 'ENVIO NOTIFICACIÓN';\n\n  constructor() {}\n}\n\nexport class ErrorMessages {\n  F141 = 'No tiene acceso a internet';\n  F142 = 'Ocurrio un error en el servicio';\n  F143 = 'Mensaje F143';\n  F144 = 'Mensaje F144';\n  F145 = 'Mensaje F145';\n  F146 = 'Mensaje F146';\n  F147 = 'Mensaje F147';\n  F148 = 'Mensaje F148';\n  F149 = 'Mensaje F149';\n  F150 = 'Mensaje F150';\n\n  T141 = 'Mensaje T141';\n  T142 = 'Mensaje T142';\n  T143 = 'Mensaje T143';\n  T144 = 'Mensaje T144';\n  T145 = 'Mensaje T145';\n  T146 = 'Mensaje T146';\n  T147 = 'Mensaje T147';\n  T148 = 'Mensaje T148';\n  T149 = 'Mensaje T149';\n  T150 = 'Mensaje T150';\n\n  constructor() {}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorMessages } from './error-options';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n  errorMessages: ErrorMessages;\n\n  getClientErrorMessage(error: Error): string {\n    return error.message ?\n           error.message :\n           error.toString();\n  }\n\n  getClientErrorStack(error: Error): string {\n    return error.stack ?\n           error.stack :\n           error.toString();\n  }\n\n  getServerErrorMessage(error: HttpErrorResponse): string {\n    return navigator.onLine ?\n           error.message :\n           this.errorMessages.F141;\n  }\n\n}\n","import { ErrorHandler, Injectable, Injector } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorService } from './error.service';\nimport { LoggingService } from './logging.service';\nimport { ErrorTypes, ErrorMessages } from './error-options';\nimport { ErrorGlobal } from './error-global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalErrorHandlerService implements ErrorHandler {\n\n  constructor(private injector: Injector, public errorMessages: ErrorMessages, public errorTypes: ErrorTypes) { }\n\n  handleError(error: ErrorGlobal | HttpErrorResponse ) {\n    const errorService = this.injector.get(ErrorService);\n    const logger = this.injector.get(LoggingService);\n\n    let message;\n    let stackTrace;\n\n    if (error instanceof HttpErrorResponse) { // Server error\n      message = errorService.getServerErrorMessage(error);\n      stackTrace = error.message;\n      logger.logError(this.errorTypes.ERROR, this.errorMessages.F142, message, stackTrace);\n    } else if (error instanceof Error) {  // Client Error\n      message = errorService.getClientErrorMessage(error);\n      stackTrace = errorService.getClientErrorStack(error);\n      logger.logError(error.type, error.stage, message, stackTrace);\n    }\n  }\n\n\n}\n","import { Injectable,  } from '@angular/core';\nimport { NGXLogger } from 'ngx-logger';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggingService {\n\n  constructor(private _logger: NGXLogger, private toastr: ToastrService) { }\n\n    logError(type: string, stage: string, message: string, stack: string) {\n\n        // INFO, DEBUG, WARNING, ERROR, FATAL_ERROR.\n        switch (type) {\n          case 'FATAL_ERROR':\n            this._logger.fatal('AppWeb', stage, 'ID', message, stack);\n            break;\n          case 'ERROR':\n            this._logger.error('AppWeb', stage, 'ID', message, stack);\n            break;\n          case 'WARNING':\n            this._logger.warn('AppWeb', stage, 'ID', message, stack);\n            break;\n          case 'DEBUG':\n            this._logger.debug('AppWeb', stage, 'ID', message, stack);\n            break;\n          case 'INFO':\n            this._logger.info('AppWeb', stage, 'ID', message, stack);\n            break;\n          default:\n            break;\n      }\n        this.showError(type, message);\n    }\n\n    showError(type: string, message: string) {\n      switch (type) {\n        case 'FATAL_ERROR':\n        case 'ERROR':\n          this.toastr.error(message, 'Error');\n          break;\n        case 'WARNING':\n          this.toastr.warning(message, 'Advertencia');\n          break;\n        case 'DEBUG':\n          this.toastr.info(message, 'Verificar');\n          break;\n        case 'INFO':\n          this.toastr.info(message, 'Verificar');\n          break;\n        default:\n          break;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenerateQrService {\n\n  constructor(private http: HttpClient) { }\n\n  getQRCode(){\n    const urlExample = 'https://reqres.in/api/user';\n    return this.http.get(urlExample);\n  }\n}","import { BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IdleTimeoutService {\n\n  private validateSession = new BehaviorSubject(false);\n  stateSession = this.validateSession.asObservable();\n\n  constructor() {}\n\n  setValidateSession(logout: boolean) {\n    this.validateSession.next(logout);\n  }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor() { }\n\n  getItemString(key: string) {\n    return localStorage.getItem(key);\n  }\n\n  stringifyItem(key: string, item: any) {\n    localStorage.setItem(key, JSON.stringify(item));\n  }\n\n  setItem(key: string, item: any) {\n    localStorage.setItem(key, item);\n  }\n\n  getItemJSON(key: string) {\n    return JSON.parse(localStorage.getItem(key));\n  }\n\n  removeItem(key: string) {\n    localStorage.removeItem(key);\n  }\n\n  clear() {\n    localStorage.clear();\n  }\n}","export { EncryptionService } from './encryption/encryption.service';\nexport { IdleTimeoutService } from './idle-timeout/idle-timeout.service';\nexport { GenerateQrService } from './http/generate-qr/generate-qr.service';\nexport { LocalStorageService } from './local-storage/local-storage.service';\nexport { ValidateDataService } from './validate-data/validate-data.service';\nexport { SessionStorageService } from './session-storage/session-storage.service';\nexport { ErrorMessages, ErrorStages, ErrorTypes } from './exceptions/error-options';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n  EncryptionService,\n  IdleTimeoutService,\n  LocalStorageService,\n  SessionStorageService,\n  GenerateQrService,\n  ErrorMessages,\n  ErrorStages,\n  ErrorTypes\n} from './services.index';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    GenerateQrService,\n    EncryptionService,\n    IdleTimeoutService,\n    LocalStorageService,\n    SessionStorageService,\n    ErrorMessages,\n    ErrorTypes,\n    ErrorStages\n  ],\n  declarations: []\n})\nexport class ServicesModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionStorageService {\n\n  constructor() { }\n\n  getItemString(key: string) {\n    return sessionStorage.getItem(key);\n  }\n\n  stringifyItem(key: string, item: any) {\n    sessionStorage.setItem(key, JSON.stringify(item));\n  }\n\n  setItem(key: string, item: any) {\n    sessionStorage.setItem(key, item);\n  }\n\n  getItemJSON(key: string) {\n    return JSON.parse(sessionStorage.getItem(key));\n  }\n\n  removeItem(key: string) {\n    sessionStorage.removeItem(key);\n  }\n\n  clear() {\n    sessionStorage.clear();\n  }\n}","import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateDataService {\n\n  private messageError;\n  private REGEX_NUMBERS = \"^[1-9][0-9]*$\";\n\n  constructor(private translate: TranslateService) { }\n\n  public validateId(documentId):boolean {\n    let result = false;\n    var id = documentId;\n    var regex = new RegExp(this.REGEX_NUMBERS, 'g');\n    var matcher = regex.test(id);\n\n    if(id == null){\n      this.setMessageError(\"documentId.empty\");\n    } else if (id.length < 6) {\n      this.setMessageError(\"documentId.length_min\");\n    } else if (id.length > 10) {\n      this.setMessageError(\"documentId.length_max\");\n    } else if (!matcher) {\n      this.setMessageError(\"documentId.regex\");\n    } else {\n      result = true;\n    }\n\n    return result;\n  }\n\n  public validateIdType(documentType):boolean {\n    let result = false;\n    var type = documentType;\n\n    if(type == null){\n      this.setMessageError(\"documentType.empty\");\n    } else if (type != 'CC') {\n      this.setMessageError(\"documentType.type\");\n    } else {\n      result = true;\n    }\n\n    return result;\n  }\n\n  private setMessageError(pathMsg: string){\n    let initPath = \"error.validate_data\";\n    this.messageError = this.translate.instant(initPath + \".\" + pathMsg);\n  }\n\n  public getMessageError(){\n    return this.messageError;\n  }\n}","// Theme\nexport { FooterComponent } from './theme/footer/footer.component';\nexport { HeaderComponent } from './theme/header/header.component';\nexport { ServiceErrorComponent } from './theme/service-error/service-error.component';\nexport { PageNotFoundComponent } from './theme/page-not-found/page-not-found.component';\nexport { NotAuthorizedComponent } from './theme/not-authorized/not-authorized.component';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { \n    FooterComponent, \n    HeaderComponent,\n    PageNotFoundComponent,\n    ServiceErrorComponent,\n    NotAuthorizedComponent\n} from './shared.index';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    FooterComponent, \n    HeaderComponent,\n    PageNotFoundComponent,\n    ServiceErrorComponent,\n    NotAuthorizedComponent\n  ],\n  declarations: [NotAuthorizedComponent, ServiceErrorComponent, PageNotFoundComponent]\n})\nexport class SharedModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>header works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-authorized',\n  templateUrl: './not-authorized.component.html',\n  styleUrls: ['./not-authorized.component.scss']\n})\nexport class NotAuthorizedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-authorized works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container m-5\">\n    <p>Ups... page not found...</p>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-service-error',\n  templateUrl: './service-error.component.html',\n  styleUrls: ['./service-error.component.scss']\n})\nexport class ServiceErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>service-error works!</p>\n","export const environment = {\n\tproduction: false,\n\tendpoints: {\n\t\taccessToken: \"https://soyyodev.auth.us-east-1.amazoncognito.com/oauth2/token\"\n\t},\n\tkeys: {\n\t\tusername: \"i9k7m3o570i15p3v4a678s79e\",\n\t\tpassword: \"ftovorpv8k4knllnlbjchqq2rau2gif7qhdtagqjdu0k033rcl2\",\n\t\tapiKey: \"bYEHYDL5dU1HrkKjlgkzN5SJVwJmFSHP9kdBAl2B\"\n\t},\n\ttime: {\n        timeSession: 300,\n\t}\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"]}